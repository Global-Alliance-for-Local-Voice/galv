<?php

function schedule_install() {
  schedule_update_7001();
  schedule_update_7002();
}

/**
 * Implements hook_schema().
 */
function schedule_schema() {
  $schema = array();

  $schema['schedule'] = array(
    'description' => 'The schedule table.',
    'fields' => array(
      'sid' => array(
        'description' => 'The Primary key of the Schedule entity',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type (bundle) of schedule.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'title' => array(
        'description' => 'The title of the schedule',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'ID of Drupal user creator.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the schedule was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the schedule was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'description' => array(
        'description' => 'schedule description',
        'type' => 'text',
      ),
    ),
    'primary key' => array('sid'),
  );

  $schema['schedule_type'] = array(
    'description' => 'Stores information about all defined schedule types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique schedule type ID.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this schedule type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'label' => array(
        'description' => 'the human-readable name of this schedule type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'A brief description of this type',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'medium',
        'translatable' => TRUE,
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );
  return $schema;
}


/**
 * Implements hook_update_N().
 * Add entity schedule_a_live_video_conference.
 */
function schedule_update_7001() {
  // Create entity schedule.
  $entity_type = 'schedule';
  $entity = entity_create($entity_type, array('type' => 'schedule_a_live_video_conference'));
  $entity->title = "Video Conference";
  $entity->uid = 1;
  $entity->save();

  // Create entity schedule type.
  $entity_type = new ScheduleType();
  $entity_type->label = "Schedule a Live Video Conference";
  $entity_type->description = "This schedule allows the user to schedule a live video conference with other members of the community.";
  $entity_type->type = "schedule_a_live_video_conference";
  $entity_type->save();
}

/**
 * Implements hook_update_N().
 * Add fields for "Schedule a Live Video Conference" Schedule.
 */
function schedule_update_7002() {
  module_load_include('inc', 'schedule', 'schedule_fields');

  // Create all the fields we are adding to our entity type.
  foreach (_schedule_installed_fields() as $field) {
    field_create_field($field);
  }

  // Create all the instances for our fields.
  foreach (_schedule_installed_instances() as $instance) {
    $instance['entity_type'] = 'schedule';
    $instance['bundle'] = 'schedule_a_live_video_conference';
    field_create_instance($instance);
  }
  return 'Created fields';
}




